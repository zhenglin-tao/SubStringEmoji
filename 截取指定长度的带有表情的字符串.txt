
//获取字符串的总字节数 
public static int getGroupNameBytes(String s){

 int bytes=0;

 try {

 bytes=s.getBytes("UTF-8").length;

 } catch (UnsupportedEncodingException e) {

 // TODO Auto-generated catch block

 e.printStackTrace();

 }

 return bytes;

 }
//根据指定的字数或者字节数进行准确截取
 public static String getTargetString(String s){

 String[] stringList=s.split("");

 String assits = "";

 int num = 0;

 for (int i = 0; i < stringList.length; i++) {

 assits=assits+stringList[i];

 if(assits!=null &&getGroupNameBytes(assits)==30){

 num=i;

 break;

 }else if(assits!=null &&getGroupNameBytes(assits)>30){

 num=i-1;

 break;

 }

 }

// String target= s.substring(0, num);//当含有表情时不能直接substring（），

 String target=substring(s, 0, num);

 return target;

 }

 //防止表情截取不完整

 public static String substring(String source, int start, int end) {

 String result;

 try {

 result = source.substring(source.offsetByCodePoints(0, start),

 source.offsetByCodePoints(0, end));

 } catch (Exception e) {

 result = source;

 }

 return result;

}
//进行输入框监听，可以根据字数或者字节数进行限制

public void onTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {

 //add by taozhenglin for NATIVEIIS-360 and 566 BEGIN

 Editable editable = edit.getText();

 String inputstr = editable.toString();

 int len = editable.length();

 if(getGroupNameBytes(inputstr) > 30)

 {

 int selEndIndex = Selection.getSelectionEnd(editable);

// String str = editable.toString();

 //截取新字符串

 String newStr = getTargetString(inputstr);

 edit.setText(newStr);

 editable = edit.getText();

 //新字符串的长度

 int newLen = editable.length();

 //旧光标位置超过字符串长度

 if(selEndIndex > newLen)

 {

 selEndIndex = editable.length();

 }

 //设置新光标所在的位置

 Selection.setSelection(editable, selEndIndex);


 }

}


